AWSTemplateFormatVersion: "2010-09-09"
Description: NAT instance AMI builder
Parameters:
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Security group IDs
Resources:
  BuildLogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-BuildLogBucket"
        - Key: CostTag
          Value: !Ref AWS::StackName
        - Key: AppManagerCFNStackKey
          Value: !Ref AWS::StackName
  Topic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Role"
        - Key: CostTag
          Value: !Ref AWS::StackName
        - Key: AppManagerCFNStackKey
          Value: !Ref AWS::StackName
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
      Path: !Sub "/${AWS::StackName}/"
      Description: EC2 SSM and CloudWatch role
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/EC2InstanceProfileForImageBuilder"
      Policies:
        - PolicyName: AccessSSMParameters
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                Resource: !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
        - PolicyName: AccessBuildLogBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "${BuildLogBucket.Arn}/*"
              - Effect: Allow
                Action: s3:ListBucket
                Resource: !GetAtt BuildLogBucket.Arn
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Role"
        - Key: CostTag
          Value: !Ref AWS::StackName
        - Key: AppManagerCFNStackKey
          Value: !Ref AWS::StackName
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref Role
      Path: !Sub "/${AWS::StackName}/"
  InfrastructureConfig:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Description: !Sub "${AWS::StackName} infrastructure"
      InstanceProfileName: !Ref InstanceProfile
      InstanceTypes:
        - t4g.nano
      Logging:
        S3Logs:
          S3BucketName: !Ref BuildLogBucket
      Name: !Sub "${AWS::StackName}-InfraConfig"
      ResourceTags:
        CostTag: !Ref AWS::StackName
      SecurityGroupIds: !Ref SecurityGroupIds
      SnsTopicArn: !Ref Topic
      SubnetId: !Ref SubnetId
      TerminateInstanceOnFailure: true
      Tags:
        Name: !Sub "${AWS::StackName}-InfrastructureConfig"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName
  InstallCloudWatchAgentComponent:
    Type: AWS::ImageBuilder::Component
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub "${AWS::StackName}-InstallCloudWatchAgent"
      Platform: Linux
      Version: "1.0.0"
      SupportedOsVersions:
        - Amazon Linux 2023
      Description: Install Amazon CloudWatch Agent for Amazon Linux 2023
      Data: |
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: Install
                action: ExecuteBash
                onFailure: Abort
                inputs:
                  commands:
                    - dnf install -y amazon-cloudwatch-agent
      Tags:
        Name: !Sub "${AWS::StackName}-InstallCloudWatchAgentComponent"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName
  SetupNatComponent:
    Type: AWS::ImageBuilder::Component
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub "${AWS::StackName}-SetupNat"
      Description: Setup NAT
      ChangeDescription: Command fix
      Platform: Linux
      Version: "1.0.1"
      Data: |
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: SetupNat
                action: ExecuteBash
                onFailure: Abort
                inputs:
                  commands:
                    - yum install iptables-services -y
                    - systemctl enable iptables
                    - systemctl start iptables
                    - echo "net.ipv4.ip_forward = 1" | tee -a /etc/sysctl.conf
                    - sysctl -p
                    - "if_name=`ip -o link show device-number-0 | awk -F': ' '{print $2}'`"
                    - iptables -t nat -A POSTROUTING -o "$if_name" -s 0.0.0.0/0 -j MASQUERADE
      Tags:
        Name: !Sub "${AWS::StackName}-SetupNatComponent"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName
  Recipe:
    Type: AWS::ImageBuilder::ImageRecipe
    UpdateReplacePolicy: Retain
    Properties:
      Description: NAT instance image recipe
      Components:
        - ComponentArn: !Sub "arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:component/update-linux/1.0.2/1"
        - ComponentArn: !Sub "arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:component/reboot-linux/1.0.1/1"
        - ComponentArn: !Ref InstallCloudWatchAgentComponent
        - ComponentArn: !Ref SetupNatComponent
      Name: !Sub "${AWS::StackName}-Recipe"
      ParentImage: !Sub "arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:image/amazon-linux-2023-arm64/x.x.x"
      Version: "1.0.1"
      Tags:
        Name: !Sub "${AWS::StackName}-Recipe"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName
  RecipeLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/imagebuilder/${AWS::StackName}-Recipe"
      RetentionInDays: 7
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-RecipeLogGroup"
        - Key: CostTag
          Value: !Ref AWS::StackName
        - Key: AppManagerCFNStackKey
          Value: !Ref AWS::StackName
  DistConfig:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties:
      Distributions:
        - Region: !Ref AWS::Region
          AmiDistributionConfiguration:
            AmiTags:
              CostTag: !Ref AWS::StackName
      Name: !Sub "${AWS::StackName}-DistConfig"
      Description: !Sub "${AWS::StackName} distribution config"
      Tags:
        Name: !Sub "${AWS::StackName}-DistConfig"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName
  Pipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties:
      DistributionConfigurationArn: !Ref DistConfig
      InfrastructureConfigurationArn: !Ref InfrastructureConfig
      ImageRecipeArn: !Ref Recipe
      Name: !Sub "${AWS::StackName}-Pipeline"
      Status: ENABLED
      Tags:
        Name: !Sub "${AWS::StackName}-Pipeline"
        CostTag: !Ref AWS::StackName
        AppManagerCFNStackKey: !Ref AWS::StackName